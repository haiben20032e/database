<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bt_them.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        MyvxzlayAAAAAElFTkSuQmCC
</value>
  </data>
</root>